openapi: 3.0.1
info:
  title: Project Service API
  description: API documentation for ProjectService, including projects, vacancies, subprojects, stages, moments, and internships.
  version: 1.0.0
servers:
  - url: http://localhost:8082/api/v1

paths:
  /project/{projectId}:
    get:
      summary: Get project by ID
      operationId: getProject
      parameters:
        - name: projectId
          in: path
          required: true
          description: ID of the project
          schema:
            type: integer
      responses:
        '200':
          description: Project object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectDto'

  /vacancies:
    post:
      summary: Create a new vacancy
      operationId: createVacancy
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VacancyDto'
      responses:
        '201':
          description: Vacancy created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VacancyDto'

    put:
      summary: Update a vacancy
      operationId: updateVacancy
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VacancyDto'
      responses:
        '200':
          description: Vacancy updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VacancyDto'

  /vacancies/{id}:
    delete:
      summary: Delete a vacancy by ID
      operationId: deleteVacancy
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Vacancy deleted

    get:
      summary: Get a vacancy by ID
      operationId: getVacancyById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Vacancy found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VacancyDto'

  /vacancies/filter:
    post:
      summary: Find vacancies by filter
      operationId: findVacanciesByFilter
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VacancyFilterDto'
      responses:
        '200':
          description: List of vacancies
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/VacancyDto'

  /subproject:
    post:
      summary: Create a subproject
      operationId: createSubProject
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubProjectDto'
      responses:
        '201':
          description: SubProject created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectDto'

  /stages:
    post:
      summary: Create a stage
      operationId: createStage
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StageDto'
      responses:
        '201':
          description: Stage created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StageDto'

  /moments:
    post:
      summary: Create a moment
      operationId: createMoment
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MomentDto'
      responses:
        '201':
          description: Moment created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MomentDto'

  /internships:
    post:
      summary: Create an internship
      operationId: createInternship
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InternshipDto'
      responses:
        '201':
          description: Internship created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternshipDto'

components:
  schemas:
    ProjectDto:
      type: object
      description: DTO for representing project details
      properties:
        id:
          type: integer
        name:
          type: string
          description: Name of the project
        description:
          type: string
          description: Detailed description of the project
        ownerId:
          type: integer
          description: ID of the project owner
        parentProjectId:
          type: integer
          description: ID of the parent project (if applicable)
        createdAt:
          type: string
          format: date-time
          description: Timestamp when the project was created
        updatedAt:
          type: string
          format: date-time
          description: Timestamp when the project was last updated
        status:
          type: string
          description: Current status of the project
        visibility:
          type: string
          description: Visibility level of the project

    VacancyDto:
      type: object
      description: DTO for creating or updating a vacancy
      properties:
        id:
          type: integer
        name:
          type: string
          description: Name of the vacancy
        description:
          type: string
          description: Detailed description of the vacancy
        projectId:
          type: integer
          description: ID of the project this vacancy is associated with
        candidateIds:
          type: array
          items:
            type: integer
          description: List of candidate IDs for the vacancy
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        createdBy:
          type: integer
        updatedBy:
          type: integer
        status:
          type: string
        salary:
          type: number
          format: double
          description: Salary offered for the vacancy
        workSchedule:
          type: string
          description: Work schedule for the vacancy
        count:
          type: integer
          description: Number of positions available
        requiredSkillIds:
          type: array
          items:
            type: integer
          description: List of required skill IDs for the vacancy

    VacancyFilterDto:
      type: object
      description: DTO for filtering vacancies
      properties:
        namePattern:
          type: string
          description: Filter based on vacancy name pattern
        positionPattern:
          type: string
          description: Filter based on position name pattern

    SubProjectDto:
      type: object
      description: DTO for creating or updating subprojects
      properties:
        id:
          type: integer
        projectId:
          type: integer
        name:
          type: string
          description: Name of the subproject

    StageDto:
      type: object
      description: DTO for creating or updating stages
      properties:
        stageId:
          type: integer
        stageName:
          type: string
          description: Name of the stage
        projectId:
          type: integer
        stageRolesDto:
          type: array
          items:
            $ref: '#/components/schemas/StageRolesDto'

    StageRolesDto:
      type: object
      description: DTO for stage roles
      properties:
        teamRole:
          type: string
          description: Role in the team
        count:
          type: integer
          description: Number of members in the role

    MomentDto:
      type: object
      description: DTO for creating or updating moments
      properties:
        id:
          type: integer
        name:
          type: string
        description:
          type: string
        date:
          type: string
          format: date-time
        projectIds:
          type: array
          items:
            type: integer

    InternshipDto:
      type: object
      description: DTO for creating or updating internships
      properties:
        id:
          type: integer
        projectId:
          type: integer
        mentorId:
          type: integer
        internsId:
          type: array
          items:
            type: integer
        name:
          type: string
        description:
          type: string
        status:
          type: string
        startDate:
          type: string
          format: date-time
        endDate:
          type: string
          format: date-time
